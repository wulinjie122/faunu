/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

buildscript {
    repositories {
        // 远程maven仓库
        mavenCentral()
        // 本地maven仓库
        mavenLocal()
    }

    dependencies {
        classpath 'org.projectlombok:lombok:1.18.4'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group 'com.zendaimoney.chaos'
    version '0.0.1'

    repositories {
        // 远程maven仓库
        mavenCentral()
        // 本地maven仓库
        mavenLocal()
    }

    tasks.withType(JavaCompile) {
        // 解决编辑阶段，中文注释乱码问题导致无法编译问题
        options.encoding = 'UTF-8'
        options.deprecation = true
    }

    dependencies {
        // spring
        compileOnly 'org.springframework:spring-context:4.2.8.RELEASE'
        compileOnly 'org.springframework:spring-context-support:4.2.8.RELEASE'
        // spring boot
        compileOnly 'org.springframework.boot:spring-boot-autoconfigure:2.1.1.RELEASE'
        // lombok
        compileOnly 'org.projectlombok:lombok:1.18.4'
        // guava
        compile 'com.google.guava:guava:27.0.1-jre'
        // log4j
        compileOnly 'org.slf4j:slf4j-api:1.7.25'
        compileOnly 'org.slf4j:slf4j-log4j12:1.7.25'
        compileOnly 'org.slf4j:slf4j-log4j12:1.7.25'
        compileOnly 'log4j:log4j:1.2.17'

        // quartz
        compile 'org.quartz-scheduler:quartz:2.3.0'

        // apache commons-lang3
        compile 'org.apache.commons:commons-lang3:3.7'

        compile 'javax.mail:mail:1.4.7'

        // thymeleaf
        compileOnly 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'
        compileOnly 'org.thymeleaf:thymeleaf-spring4:3.0.11.RELEASE'

        // apollo
        compileOnly 'com.ctrip.framework.apollo:apollo-client:0.11.0-SNAPSHOT'
    }
}

/**
 * 子项目配置
 */
subprojects {
    version = project.rootProject.version

    javadoc {
        options.encoding = 'UTF-8'
    }
}

//设置动态属性
ext {
    //发布到仓库用户名
    //publishUserName = "123"
    //发布到仓库地址
    //publishUserPassword = "123"
    //仓库地址
    //publishURL="http://196.10.149.149:8080/nexus/content/repositories/snapshots/"

    //apiBaseJarName = "gcf-dubbo-api-base"
    //apiBaseJarVersion = '1.6.gome-SNAPSHOT'
    //builtBy="gradle 1.9"
}

//上传jar包
/*
publishing {
    publications {
        publishing.publications.create('apiBase', MavenPublication) {
            groupId 'com.ai.gcf.api'
            artifactId apiBaseJarName
            version apiBaseJarVersion
            artifact apiBaseJar
        }
    }
    repositories {
        maven {
            url publishURL
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
        }
    }
}
*/

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}